.TH "pip_get_system_id" 3 "Wed Jul 1 2020" "PiP - Process-in-Process" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pip_get_system_id \- pip_get_system_id 
deliver a process or thread ID defined by the system
.PP
\fBSynopsis:\fP
.RS 4
#include <\fBpip\&.h\fP> int pip_get_system_id( int *pipid, uintptr_t *idp );
.RE
.PP
\fBDescription:\fP
.RS 4
The returned object depends on the PiP execution mode\&. In the process mode it returns TID (Thread ID, not PID) and in the thread mode it returns thread (\fCpthread_t\fP) associated with the PiP task This function can be used regardless to the PiP execution mode\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIpipid\fP PiP ID of a target PiP task 
.br
\fIidp\fP a pointer to store the ID value
.RE
.PP
\fBReturns:\fP
.RS 4
Return 0 on success\&. Return an error code on error\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIEPERM\fP The PiP library is not initialized yet 
.RE
.PP

