.TH "pip_spawn_hook" 3 "Wed Jul 1 2020" "PiP - Process-in-Process" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pip_spawn_hook \- pip_spawn_hook 
Setting invocation hook information
.PP
\fBSynopsis:\fP
.RS 4
#include <\fBpip\&.h\fP> 
.br
void pip_spawn_hook( pip_spawn_hook_t *hook, pip_spawnhook_t before, pip_spawnhook_t after, void *hookarg );
.RE
.PP
\fBDescription:\fP
.RS 4

.RE
.PP
The \fIbefore\fP and \fIafter\fP functions are introduced to follow the programming model of the \fCfork\fP and \fCexec\fP\&. \fIbefore\fP function does the prologue found between the \fCfork\fP and \fCexec\fP\&. \fIafter\fP function is to free the argument if it is \fCmalloc()ed\fP, for example\&. 
.PP
\fBPrecondition:\fP
.RS 4
It should be noted that the \fIbefore\fP and \fIafter\fP functions are called in the \fIcontext\fP of PiP root, although they are running as a part of PiP task (i\&.e\&., having PID of the spawning PiP task)\&. Conversely speaking, those functions cannot access the variables defined in the spawning PiP task\&. 
.PP
The before and after hook functions should have the function prototype as shown below; 
.PP
.nf
int hook_func( void *hookarg )

.fi
.PP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIhook\fP Pointer to the \fCpip_spawn_hook_t\fP structure in which the invocation hook information will be set 
.br
\fIbefore\fP Just before the executing of the spawned PiP task, this function is called so that file descriptors inherited from the PiP root, for example, can deal with\&. This is only effective with the PiP process mode\&. This function is called with the argument \fIhookarg\fP described below\&. 
.br
\fIafter\fP This function is called when the PiP task terminates for the cleanup purpose\&. This function is called with the argument \fIhookarg\fP described below\&. 
.br
\fIhookarg\fP The argument for the \fIbefore\fP and \fIafter\fP function call\&.
.RE
.PP
\fBNote:\fP
.RS 4
Note that the file descriptors and signal handlers are shared between PiP root and PiP tasks in the pthread execution mode\&.
.RE
.PP
\fBSee Also:\fP
.RS 4
pip_task_spawn(3) 
.RE
.PP

