.TH "pip_spawn_from_func" 3 "Wed Jul 1 2020" "PiP - Process-in-Process" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pip_spawn_from_func \- pip_spawn_from_func 
Setting information to invoke a PiP task starting from a function defined in a program
.PP
\fBSynopsis:\fP
.RS 4
#include <\fBpip\&.h\fP> 
.br
pip_spawn_from_func( pip_spawn_program_t *progp, char *prog, char *funcname, void *arg, char **envv, void *exp );
.RE
.PP
\fBDescription:\fP
.RS 4
This function sets the required information to invoke a program, starting from the \fCmain()\fP function\&. The function should have the function prototype as shown below; 
.PP
.nf
int start_func( void *arg )

.fi
.PP
 This start function must be globally defined in the program\&.\&. The returned integer of the start function will be treated in the same way as the \fCmain\fP function\&. This implies that the \fCpip_wait\fP function family called from the PiP root can retrieve the return code\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIprogp\fP Pointer to the \fCpip_spawn_program_t\fP structure in which the program invokation information will be set 
.br
\fIprog\fP Path to the executiable file\&. 
.br
\fIfuncname\fP Function name to be started 
.br
\fIarg\fP Argument which will be passed to the start function 
.br
\fIenvv\fP Environment variables\&. If this is \fCNULL\fP, then the \fCenviron\fP variable is used for the spawning PiP task\&. 
.br
\fIexp\fP Export value to the spawning PiP task
.RE
.PP
\fBSee Also:\fP
.RS 4
pip_task_spawn(3), pip_spawn_from_main(3) 
.RE
.PP

