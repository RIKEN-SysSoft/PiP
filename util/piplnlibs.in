#!/bin/sh

# $RIKEN_copyright: 2018 Riken Center for Computational Sceience, 
# 	  System Software Devlopment Team. All rights researved$
# $PIP_VERSION: Version 1.0$
# $PIP_license: <Simplified BSD License>
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the 
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# The views and conclusions contained in the software and documentation
# are those of the authors and should not be interpreted as representing
# official policies, either expressed or implied, of the PiP project.$

### \addtogroup piplnlibs piplnlibs
###
### \brief command to create symbolic links to the SOLIBs in the patched GLIBC.
###
### \section synopsis SYNOPSIS
###
###	\c \b piplnlibs [<b>-rs</b>]
###
### \section description DESCRIPTION
### This command creates a number of symbolic links to the SOLIBs which
### are not installed by the patched GLIBC installation.
###
### \section options OPTIONS
###
### \subsection remove -r
### Remove symbolic links to SOLIBs in @glibc_libdir@ before creating.
###
### \subsection silent -s
### Silent mode.
###
### \section environment ENVIRONMENT
###
### \subsection PIP_LIBRARY_PATH PIP_LIBRARY_PATH
### Symbolic links to SOLIBs in the directories specified by PIP_LIBRARY_PATH
### will be also created.
###
### \subsection LD_LIBRARY_PATH LD_LIBRARY_PATH
### If PIP_LIBRARY_PATH is not set, LD_LIBRARY_PATH is used instead.

glibc_libdir=@glibc_libdir@
glibc_default_libdirs="/lib64 /lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu"

exit_status=0
opt_silent=false
opt_remove=false
opt_add=false
add_libdir=
program_name=`basename $0`

usage()
{
##	echo >&2 "Usage: $program_name [-rs] [-a DIR]"
	echo >&2 "Usage: $program_name [-rs]"
	exit 2
}

for option
do
	case $option in
	-*)	case $option in -*r*) opt_remove=true;; esac
		case $option in -*s*) opt_silent=true;; esac
		case $option in -a)
			opt_add=true
			shift
			add_dir=$option
		esac
		case $option in -*[!rs]*)
			echo >&2 "$program_name: error: invalid option $option"
			usage;;
		esac;;
	*)	echo >&2 "$program_name: error: invalid argument $option"
		usage;;
	esac
done

for d in $glibc_default_libdirs
do
	if [ x"$glibc_libdir" = x"$d" ]; then
		echo >&2 "$program_name: warning:" \
			"nothing to do, because glibc_libdir is a default libdir ${d}"
		exit $exit_status
	fi
done

if $opt_remove; then
	find ${glibc_libdir} -maxdepth 1 -type l -name 'lib*.so*' |
	while read lib
	do
		if readlink $lib | grep '^/' >/dev/null; then
			$opt_silent || echo \
			   rm ${lib}
			if rm ${lib}
			then
				:
			else
				exit_status=1
			fi
		fi
	done
fi

if $opt_add; then
	ls ${add_libdir} | grep '^lib.*\.so\(\.[0-9a-z]*\)*$' |
	while read lib
	do
		if [ -f ${glibc_libdir}/$lib ]; then
			continue
		fi
		$opt_silent || echo \
		   ln -s ${libdir}/${lib} ${glibc_libdir}/
		if ln -s ${libdir}/${lib} ${glibc_libdir}/
		then
			:
		else
			exit_status=1
		fi
	done
fi

if [ -n "${PIP_LIBRARY_PATH:-$LD_LIBRARY_PATH}" ]; then
	extra_libdirs=`echo "${PIP_LIBRARY_PATH:-$LD_LIBRARY_PATH}" |
		tr ':' '\012' | grep '^/'`
else
	extra_libdirs=
fi

for libdir in ${extra_libdirs} ${glibc_default_libdirs}
do
	ls ${libdir} | grep '^lib.*\.so\(\.[0-9a-z]*\)*$' |
	while read lib
	do
		if [ -f ${glibc_libdir}/$lib ]; then
			continue
		fi
		$opt_silent || echo \
		   ln -s ${libdir}/${lib} ${glibc_libdir}/
		if ln -s ${libdir}/${lib} ${glibc_libdir}/
		then
			:
		else
			exit_status=1
		fi
	done
done

exit $exit_status
