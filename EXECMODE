
Process-in-Process (PiP) Execution Mode

* Execution mode

  There are three PiP execution modes and environment variable settings;

  1) PiP using pthread_create only
     "PIP_MODE=thread"
     In this mode, a PiP task behaves more like a pthread in terms of
     PID, file descriptos, signal handling, termination, etc.

  2) otherwise,
     "PIP_MODE=process"
     In this mode, a PiP task behaves more like a process, in terms of
     TID, file descriptors, signal handling, termination, etc.

  2-1) PiP using pthread_create and clone wrapper
     "PIP_MODE=process:preload, LD_PRELOAD=<PIP_INSTALL_DIR>/lib"

  2-2) PiP not using pthread_clone at all [experimental, yet]
     "PIP_MODE=process:pipclone"

* Synchronization between PiP tasks

  Currently, pthread_barrier and pthread_mutex works between PiP root
  process and PiP tasks. However, this does NOT mean pthread
  synchronization are guaranteed to work as part of the PiP
  specification.


  Atsushi Hori <ahori@riken.jp>
  2017 March 2
