.TH "PiP Signaling Functions" 3 "Mon Jul 6 2020" "Process-in-Process" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PiP Signaling Functions \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBpip_kill\fP (int pipid, int signal)"
.br
.ti -1c
.RI "int \fBpip_sigmask\fP (int how, const sigset_t *sigmask, sigset_t *oldmask)"
.br
.ti -1c
.RI "int \fBpip_signal_wait\fP (int signal)"
.br
.in -1c
.SH "Detailed Description"
.PP 
PiP signaling functions

.PP
\fBDescription\fP
.RS 4
Signal manupilating functions\&. All functions listed here are agnostic to the PiP execution mode\&. 
.RE
.PP

.SS "pip_kill"
deliver a signal to PiP task
.PP
\fBSynopsis\fP
.RS 4
#include <\fBpip\&.h\fP> 
.br
int pip_kill( int pipid, int signal );
.RE
.PP
\fBParameters:\fP
.RS 4
\fIpipid\fP PiP ID of a target PiP task to deliver the signal 
.br
\fIsignal\fP signal number to be delivered
.RE
.PP
\fBReturns:\fP
.RS 4
Return 0 on success\&. Return an error code on error\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIEPERM\fP PiP library is not yet initialized 
.br
\fIEINVAL\fP An invalid signal number or invalid PiP ID is specified
.RE
.PP
\fBSee Also:\fP
.RS 4
tkill(2) 
.RE
.PP

.SS "pip_sigmask"
set signal mask of the current PiP task
.PP
\fBSynopsis\fP
.RS 4
#include <\fBpip\&.h\fP> 
.br
int pip_sigmask( int how, const sigset_t *sigmask, sigset_t *oldmask );
.RE
.PP
\fBDescription\fP
.RS 4
This function is agnostic to the PiP execution mode\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIhow\fP see \fBsigprogmask\fP or \fBpthread_sigmask\fP 
.br
\fIsigmask\fP signal mask 
.br
\fIoldmask\fP old signal mask
.RE
.PP
\fBReturns:\fP
.RS 4
Return 0 on success\&. Return an error code on error\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIEPERM\fP PiP library is not yet initialized 
.br
\fIEINVAL\fP An invalid signal number or invalid PiP ID is specified
.RE
.PP
\fBSee Also:\fP
.RS 4
sigprocmask, pthread_sigmask 
.RE
.PP

.SS "pip_signal_wait"
wait for a signal
.PP
\fBSynopsis\fP
.RS 4
#include <\fBpip\&.h\fP> 
.br
int pip_signal_wait( int signal );
.RE
.PP
\fBDescription\fP
.RS 4
This function is agnostic to the PiP execution mode\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIsignal\fP signal to wait
.RE
.PP
\fBReturns:\fP
.RS 4
Return 0 on success\&. Return an error code on error\&.
.RE
.PP
\fBNote:\fP
.RS 4
This function does NOT return the \fCEINTR\fP error\&. This case is treated as normal return;
.RE
.PP
\fBSee Also:\fP
.RS 4
sigwait, sigsuspend 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Process-in-Process from the source code\&.
