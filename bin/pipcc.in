#!/bin/sh

# $RIKEN_copyright: Riken Center for Computational Sceience,
# System Software Development Team, 2016, 2017, 2018, 2019$
# $PIP_VERSION: Version 1.0.0$
# $PIP_license: <Simplified BSD License>
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation
# are those of the authors and should not be interpreted as representing
# official policies, either expressed or implied, of the PiP project.$

### \addtogroup pipcc pipcc
###
### \brief C compiler driver for PiP
###
### \section synopsis SYNOPSIS
###
###	\c \b pipcc [\b pip-options] [\b cc-command-options]
###
### \section options OPTIONS
###
### The following options are avilable. If no of them specified, then
### the compiled output file can be used as both PiP root and PiP task.
###
### \subsection root -piproot
### If specified, the compile (and link) is done for PiP root.
###
### \subsection task -piptask
### If specified, the compile (and link) is done for PiP task
###

prefix=@prefix@
exec_prefix=@exec_prefix@

includedir=@includedir@
libdir=@libdir@
dynamic_linker=@dynamic_linker@
glibc_libdir=@glibc_libdir@

: ${CC:=cc}

is_linking=true
pip_root=true
pip_task=true
no_pip=false;
dryrun=false;

while [ "$1" != "" ]; do
    case $1 in
	-c|-E|-S)  is_linking=false; opts="${opts} $1";;
	--piproot|-piproot|--pip-root|-pip-root) pip_task=false;;
	--piptask|-piptask|--pip-task|-pip-task) pip_root=false;;
	--pipdir)  shift; pipdir=$1;;
	--nopip)   no_pip=true;;
	--dryrun)  dryrun=true;;
	*)         opts="${opts} $1";;
    esac
    shift;
done

if ${no_pip}; then
    echo ${CC} ${opts};
    exec ${CC} ${opts};
fi

if [ "${pipdir}" != "" ]; then
    includedir=${pipdir}/include
    libdir=${pipdir}/lib
fi

if [ "${dynamic_linker}" != "" ]; then
    PIP_LDLINUX="-Wl,--dynamic-linker=${dynamic_linker}"
fi

if [ "${glibc_libdir}" != "" ]; then
    PIP_GLIBC="-Wl,-rpath=${glibc_libdir}"
fi

PIPC_CFLAGS="-I${includedir} -pthread"
PIPC_LDFLAGS="-L${libdir} -Wl,-rpath=${libdir} ${PIP_GLIBC} -Wl,-wrap=__clone"
PIPC_LDLIBS="-lpip -ldl"

PIP_ROOT_CFLAGS="${PIPC_CFLAGS}"
PIP_ROOT_LDFLAGS="${PIPC_LDFLAGS}"
PIP_ROOT_LDLIBS="${PIPC_LDLIBS} ${PIP_LDLINUX}"

PIP_TASK_CFLAGS="${PIPC_CFLAGS} -fPIC"
PIP_TASK_LDFLAGS="${PIPC_LDFLAGS} -pie -rdynamic"
PIP_TASK_LDLIBS="${PIPC_LDLIBS}"

PIP_BOTH_CFLAGS="${PIP_TASK_CFLAGS}"
PIP_BOTH_LDFLAGS="${PIP_TASK_LDFLAGS}"
PIP_BOTH_LDLIBS="${PIP_ROOT_LDLIBS}"

if ${pip_root} && ${pip_task}; then
    PIP_CFLAGS="${PIP_BOTH_CFLAGS}"
    PIP_LDFLAGS="${PIP_BOTH_LDFLAGS}"
    PIP_LDLIBS="${PIP_BOTH_LDLIBS}"
elif ${pip_root}; then
    PIP_CFLAGS="${PIP_ROOT_CFLAGS}"
    PIP_LDFLAGS="${PIP_ROOT_LDFLAGS}"
    PIP_LDLIBS="${PIP_ROOT_LDLIBS}"
elif ${pip_task}; then
    PIP_CFLAGS="${PIP_TASK_CFLAGS}"
    PIP_LDFLAGS="${PIP_TASK_LDFLAGS}"
    PIP_LDLIBS="${PIP_TASK_LDLIBS}"
else
    PIP_CFLAGS="${PIP_BOTH_CFLAGS}"
    PIP_LDFLAGS="${PIP_BOTH_LDFLAGS}"
    PIP_LDLIBS="${PIP_BOTH_LDLIBS}"
fi

if ${is_linking}; then
    echo ${CC} ${PIP_CFLAGS} ${PIP_LDFLAGS} ${opts} ${PIP_LDLIBS};
    if [ !${dryrun} ]; then
	exec ${CC} ${PIP_CFLAGS} ${PIP_LDFLAGS} ${opts} ${PIP_LDLIBS};
    fi
else
    echo ${CC} ${PIP_CFLAGS} ${opts};
    if [ !${dryrun} ]; then
	exec ${CC} ${PIP_CFLAGS} ${opts};
    fi
fi
