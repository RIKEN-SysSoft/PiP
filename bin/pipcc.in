#!/bin/sh

# $RIKEN_copyright: Riken Center for Computational Sceience,
# System Software Development Team, 2016, 2017, 2018, 2019$
# $PIP_VERSION: Version 1.0.0$
# $PIP_license: <Simplified BSD License>
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation
# are those of the authors and should not be interpreted as representing
# official policies, either expressed or implied, of the PiP project.$

### \addtogroup pipcc pipcc
###
### \brief C compiler driver for PiP
###
### \section synopsis SYNOPSIS
###
###	\c \b pipcc [<b>pip-options,\b>] [<b>cc-command-options</b>]
###
### \section options OPTIONS
###
### The following options are avilable. If no of them specified, then
### the compiled output file can be used as both PiP root and PiP task.
###
### \subsection root -piproot
### If specified, the compile (and link) is done for PiP root.
###
### \subsection task -piptask
### If specified, the compile (and link) is done for PiP task
###

prefix=@prefix@
exec_prefix=@exec_prefix@

includedir=@includedir@
libdir=@libdir@
dynamic_linker=@dynamic_linker@

pip_root=true
pip_task=true

: ${CC:=cc}

PIPC_CFLAGS="-I${includedir} -pthread"
PIPC_LDFLAGS="-L${libdir} -Wl,-rpath=${libdir}"
PIPC_LDLIBS="-lpip -ldl"

PIPR_CFLAGS="${PIPC_CFLAGS}"
PIPR_LDFLAGS="${PIPC_LDFLAGS} -Wl,--dynamic-linker=${dynamic_linker}"
PIPR_LDLIBS="${PIPC_LDLIBS}"

PIPT_CFLAGS="${PIPC_CFLAGS} -fPIC"
PIPT_LDFLAGS="${PIPC_LDFLAGS} -pie -L${libdir} -rdynamic"
PIPT_LDLIBS="${PIPC_LDLIBS}"

PIPB_CFLAGS="${PIPT_CFLAGS}"
PIPB_LDFLAGS="${PIPC_LDFLAGS} -pie -L${libdir} -rdynamic -Wl,--dynamic-linker=${dynamic_linker}"
PIPB_LDLIBS="${PIPC_LDLIBS}"

is_linking=true

for i
do
	case $i in
	-c|-E|-S)  is_linking=false; opts="${opts} $i";;
	--piproot) pip_task=false;;
	--piptask) pip_root=false;;
	*)         opts="${opts} $i";;
	esac
done

if ${pip_root}; then
    if ${pip_task}; then
	PIP_CFLAGS="${PIPB_CFLAGS}"
	PIP_LDFLAGS="${PIPB_LDFLAGS}"
	PIP_LDLIBS="${PIPB_LDLIBS}"
    else
	PIP_CFLAGS="${PIPR_CFLAGS}"
	PIP_LDFLAGS="${PIPR_LDFLAGS}"
	PIP_LDLIBS="${PIPR_LDLIBS}"
    fi
elif ${pip_task}; then
   PIP_CFLAGS="${PIPT_CFLAGS}"
   PIP_LDFLAGS="${PIPT_LDFLAGS}"
   PIP_LDLIBS="${PIPT_LDLIBS}"
fi

if ${is_linking}; then
    echo ${CC} ${PIP_CFLAGS} ${PIP_LDFLAGS} ${opts} ${PIP_LDLIBS};
   ${CC} ${PIP_CFLAGS} ${PIP_LDFLAGS} ${opts} ${PIP_LDLIBS}
else
    echo ${CC} ${PIP_CFLAGS} ${opts}
   ${CC} ${PIP_CFLAGS} ${opts}
fi
