#!/bin/sh

# $RIKEN_copyright: Riken Center for Computational Sceience,
# System Software Development Team, 2016, 2017, 2018, 2019, 2020$
# $PIP_VERSION: Version 1.2.0$
# $PIP_license: <Simplified BSD License>
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation
# are those of the authors and should not be interpreted as representing
# official policies, either expressed or implied, of the PiP project.$

### \page pip-mode pip-mode
###
### \brief Set PiP execution mode
###
### \synopsis
### pip-mode [OPTION] [PIP-COMMAND]
###
### \description
### The following options are avilable. If no of them specified, then
### the compiled output file can be used as both PiP root and PiP task.
###
### \param -P 'process' mode
### \param -L 'process:preload' mode
### \param -C 'process:clone' mode
### \param -G 'process:got' mode
### \param -T 'thread' mode
### \param -u Show usage
###
### \sa pip-exec
### \sa printpipmode
###

INSTALLTOP=@prefix@
SRCTOP=@srcdir_top@
HAVE_PIPGLIBC=@have_pipglibc@

function usage() {
    echo >&2 $self "-p|-l|-g|-c|-t [<command> ...]";
    echo >&2 "    -P: 'process' mode";
    echo >&2 "    -L: 'process:preload' mode";
    echo >&2 "    -G: 'process:got' mode";
    echo >&2 "    -C: 'process:pipclone' mode";
    echo >&2 "    -T: 'pthread' mode";
    exit 0;
}

self=$0;
prefix=@prefix@;
flag_help=0;
flag_show=0;
pipbuild=false;
preload="";

if $pipbuld ; then
    predir=${SRCTOP}/preload;
    bindir=${SRCTOP}/bin;
else
    predir=${INSTALLTOP}/preload;
    bindir=${INSTALLTOP}/bin;
fi

if [[ -f ${predir}/pip_preload.so ]]; then
    preload="${predir}/pip_preload.so";
fi

for i; do
    case $i in
	-p|-P|--process)
	    if [[ x${preload} == "x" ]]; then
		if ! ${HAVE_PIPGLIBC}; then
		    echo >&2 "'process' mode is not available";
		    exit 1;
		fi
	    else
		pip_mode="process:preload";
	    fi;;
	-l|-L|--process:preload)
	    if [[ "x${preload}" == "x" ]]; then
		echo >&2 "Unable to find PiP preload library";
		exit 1;
	    else
		pip_mode="process:preload";
	    fi;;
	-c|-C|--process:pipclone)
	    if ! ${HAVE_PIPGLIBC}; then
		echo >&2 "Not using PiP-glibc";
		exit 1;
	    fi
	    pip_mode="process:pipclone";;
	-g|-G|--process:got)
	    echo >&2 "'process:got' mode is not available";
	    exit 1;;
	-t|-T|--thread|--pthread)
	    pip_mode=pthread;;
	--pipbuild)
	    pipbuild=true;;
	-u|--help)
	    usage;;
	-*)
	    echo >&2 "Unknown option '$1'";
	    exit 1;;
	*)
	    shift;
	    cmd=$@;
	    break;;
    esac
done

export PIP_MODE=${pip_mode};

if [ "${pip_mode}" != "pthread" ]; then
    if [ "x${preload}" != "x" ]; then
	if [[ "x${LD_PRELOAD}" == "x" ]]; then
	    export LD_PRELOAD="${preload}";
	else
	    export LD_PRELOAD="${preload}:${LD_PRELOAD}";
	fi
    fi
fi

if [ "x${cmd}" != "x" ]; then
    PIP_MODE=${pip_mode} ${cmd};
elif [ "x${pip_mode}" == "x" ]; then
    if ${pipbuild} ; then
	exec ${bindir}/printpipmode --pipbuild;
    else
	exec ${bindir}/printpipmode;
    fi
else
    if [ "${pip_mode}" != "pthread" ]; then
	if [ "x${preload}" != "x" ]; then
	    echo "LD_PRELOAD=${LD_PRELOAD}";
	fi
    fi
    echo "PIP_MODE=${PIP_MODE}";
fi
