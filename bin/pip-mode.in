#!/bin/sh

# $PIP_license: <Simplified BSD License>
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#     Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
# 
#     Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
# $
# $RIKEN_copyright: Riken Center for Computational Sceience (R-CCS),
# System Software Development Team, 2016-2021
# $
# $PIP_VERSION: Version 3.0.0$
#
# $Author: Atsushi Hori (R-CCS)
# Query:   procinproc-info@googlegroups.com
# User ML: procinproc-users@googlegroups.com
# $

### \page pip-mode pip-mode
###
### \brief Set PiP execution mode
###
### \synopsis
### pip-mode [OPTION] [PIP-COMMAND]
###
### \description
### The following options are avilable. If no of them specified, then
### the compiled output file can be used as both PiP root and PiP task.
###
### \param -P 'process' mode
### \param -L 'process:preload' mode
### \param -C 'process:clone' mode
### \param -G 'process:got' mode
### \param -T 'thread' mode
### \param -u Show usage
###
### \sa pip-exec
### \sa printpipmode
###

INSTALLTOP=@prefix@
SRCTOP=@srcdir_top@
HAVE_PIPGLIBC=@have_pipglibc@

self=$0;
prog=`basename $self`;
dir=`dirname $0`;
cwd=`cd $dir; pwd`;

function usage() {
    echo >&2 $prog "-p|-l|-g|-c|-t [<command> ...]";
    echo >&2 "    -P: 'process' mode";
    echo >&2 "    -L: 'process:preload' mode";
    echo >&2 "    -G: 'process:got' mode";
    echo >&2 "    -C: 'process:pipclone' mode";
    echo >&2 "    -T: 'pthread' mode";
    exit 2;
}

prefix=@prefix@;
flag_help=0;
flag_show=0;
pipbuild=false;
pip_mode=;
preload=;

for i; do
    case $i in
	-p|-P|--process)
	    pip_mode="process";;
	-l|-L|--process:preload)
	    pip_mode="process:preload";;
	-c|-C|--process:pipclone)
	    if ! ${HAVE_PIPGLIBC}; then
		echo >&2 "${prog}: No PiP-glibc";
		exit 1;
	    fi;
	    pip_mode="process:pipclone";;
	-g|-G|--process:got)
	    pip_mode="process:got";;
	-t|-T|--thread|--pthread)
	    pip_mode="pthread";;
	--pipbuild)
	    pipbuild=true;;
	-u|--help)
	    usage;;
	-*)
	    echo >&2 "${prog}: Unknown option '$1'";
	    exit 1;;
	*)
	    shift;
	    cmd=$@;
	    break;;
    esac
done

if $pipbuld ; then
    predir=${SRCTOP}/preload;
    bindir=${SRCTOP}/bin;
elif [ -d $cwd/preload ]; then
    predir=${SRCTOP}/preload;
    bindir=${SRCTOP}/bin;
else
    predir=${INSTALLTOP}/lib;
    bindir=${INSTALLTOP}/bin;
fi

if [[ -f ${predir}/pip_preload.so ]]; then
    preload="${predir}/pip_preload.so";
fi

LD_PRELOAD_env=
if [ x"${pip_mode}" == x"process:preload" ]; then
    if [ x"${preload}" != x ]; then
	if [ x"${LD_PRELOAD}" == x ]; then
	    LD_PRELOAD_env=LD_PRELOAD=${preload}
	else
	    LD_PRELOAD_env=LD_PRELOAD=${preload}:${LD_PRELOAD}
	fi
    else
	echo >&2 "${prog}: Unable to find PiP preload library";
	exit 1;
    fi
elif [ x"${pip_mode}" == x"process" ]; then
    if [ x"${preload}" != x ]; then
	if [ x"${LD_PRELOAD}" == x ]; then
	    LD_PRELOAD_env=LD_PRELOAD=${preload}
	else
	    LD_PRELOAD_env=LD_PRELOAD=${preload}:${LD_PRELOAD}
	fi
    fi
fi

if [ x"${cmd}" != x ]; then
    env ${LD_PRELOAD_env} PIP_MODE=${pip_mode} ${cmd};
elif [ x"${pip_mode}" == x ]; then
    env ${LD_PRELOAD_env} PIP_MODE=${pip_mode} exec ${bindir}/printpipmode;
else
    if [ x"${LD_PRELOAD_env}" != x ]; then
	echo "${LD_PRELOAD_env}";
    fi
    echo "PIP_MODE=${pip_mode}";
fi
