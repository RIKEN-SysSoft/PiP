#!/bin/sh

print_usage() {
    echo >&2 "Usage: `basename $cmd` [-s|--signal SIG] pip_cmd ...";
    exit 2;
}

isa_pip_program() {
    prefixes="R- R: R; R| 0: 1: 2: 3: 4: 5: 6: 7: 8: 9:";
    if [ $# == 3 ]; then
	for prefix in $prefixes; do
	    if [ "$prefix$1" == "$2" ]; then
		return 0;
	    fi
	done
    else
	for prefix in $prefixes; do
	    case $1 in
		$prefix*) return 0;;
	    esac
	done
    fi
    return 1;
}

decompose_psout() {
    while [ $# -ne 0 ]; do
	cmd=$1;
	cmd=`printf "%-14.14s" "$cmd"`;
	shift;
	pid=$1;
	if [ "$pid" == '<defunct>' ]; then
	    shift;
	else 
	    if isa_pip_program $cmd $pipcmd; then
		pids="$pid $pids";
	    fi
	fi
	shift;
    done
}

cmd=$0;
signal=TERM;
flag_list=false;
flag_verbose=false;

# parse command line option
while	
case $1 in
    -*) true;;
    *) false;;
esac
do
    case $1 in -s|--signal)	shift; signal=$1;;  esac
    case $1 in -l|--list)	flag_list=true;;    esac
    case $1 in -v|--verbose)	flag_verbose=true;; esac
    shift
done

pipcmds=$@
if [ "x$pipcmds" == x ]; then
    ps=`ps h --format '%c %p'`
    decompose_psout $ps;
else
    for pipcmd in $pipcmds; do
	ps=`ps h --format '%c %p' | grep $pipcmd | grep -v grep`
	decompose_psout $ps;
    done
fi

pids=`echo "$pids" | tr ' ' '\n' | sort -u | tr '\n' ' '`;
pids=`echo "$pids" | sed -e 's/[ \t]*$//'`;

extval=0;

if $flag_list; then
    if [ "x$pids" != x ]; then
	echo $pids;
    else
	if [ "x$pipcmds" == x ]; then
	    echo "no process found";
	else
	    echo "$pipcmds: no process found";
	fi
	extval=1;
    fi
else 
    if [ "x$pids" != x ]; then
	for pid in $pids; do
	    if $flag_verbose; then
		echo -n "kill $signal $pid -- ";
		ps h --format '%a [%c] %U' $pid;
	    fi
	    if kill -s $signal $pid > /dev/null 2>&1; then
		true;
	    else
		echo "kill: ($pid) - no such process";
		extval=1;
	    fi
	done
    else
	if [ "x$pipcmds" == x ]; then
	    echo "no process found";
	else
	    echo "$pipcmds: no process found";
	fi
	extval=1;
    fi
fi

exit $extval;
